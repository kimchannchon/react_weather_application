{"ast":null,"code":"var _jsxFileName = \"/home/aqua01/Desktop/BLOCKCHAIN/react_weather_application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allData, setAllData] = useState({\n    city: '',\n    country: '',\n    temperature: ''\n  });\n  useEffect(() => {\n    // actions after rendering\n    // fetch the database info - API to request weather from WEATHER DATABASE\n    fetchData();\n  }, []);\n\n  const fetchData = async city => {\n    const APIKEY = 'fc508fd00391873c1774a7c00017bb7e'; // axios - library to make request to the backend with promise\n\n    const result = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${'New York'}&appid=${APIKEY}`);\n    await setAllData({\n      city: result,\n      country: result.data.sys.country,\n      temperature: result\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: console.log('>>TEST 001>>', allData.country)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SaBJwwnPaC48WzR+/Uc/SXi9jSc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","App","allData","setAllData","city","country","temperature","fetchData","APIKEY","result","get","data","sys","console","log"],"sources":["/home/aqua01/Desktop/BLOCKCHAIN/react_weather_application/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [allData, setAllData] = useState({\n    city:'',\n    country:'',\n    temperature:''\n  })\n\n  useEffect(() => {\n    // actions after rendering\n    // fetch the database info - API to request weather from WEATHER DATABASE\n    fetchData()\n  },[])\n\n  const fetchData = async (city) => {\n    const APIKEY = 'fc508fd00391873c1774a7c00017bb7e'\n    // axios - library to make request to the backend with promise\n    const result = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${'New York'}&appid=${APIKEY}`)\n    await setAllData({\n      city: result,\n      country: result.data.sys.country,\n      temperature: result\n    })\n  }\n\n  return ( \n    <div className=\"App\">\n      {console.log('>>TEST 001>>', allData.country)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC;IACrCK,IAAI,EAAC,EADgC;IAErCC,OAAO,EAAC,EAF6B;IAGrCC,WAAW,EAAC;EAHyB,CAAD,CAAtC;EAMAR,SAAS,CAAC,MAAM;IACd;IACA;IACAS,SAAS;EACV,CAJQ,EAIP,EAJO,CAAT;;EAMA,MAAMA,SAAS,GAAG,MAAOH,IAAP,IAAgB;IAChC,MAAMI,MAAM,GAAG,kCAAf,CADgC,CAEhC;;IACA,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,qDAAoD,UAAW,UAASF,MAAO,EAA1F,CAArB;IACA,MAAML,UAAU,CAAC;MACfC,IAAI,EAAEK,MADS;MAEfJ,OAAO,EAAEI,MAAM,CAACE,IAAP,CAAYC,GAAZ,CAAgBP,OAFV;MAGfC,WAAW,EAAEG;IAHE,CAAD,CAAhB;EAKD,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACGI,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BZ,OAAO,CAACG,OAApC;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA9BQJ,G;;KAAAA,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}